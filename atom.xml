<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Gwok Fun&#39;s Blog</title>
  
  <subtitle>小楼昨夜又东风</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://gwokfun.github.io/"/>
  <updated>2018-09-15T02:51:46.196Z</updated>
  <id>https://gwokfun.github.io/</id>
  
  <author>
    <name>Gwokfun Wong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo更新文章</title>
    <link href="https://gwokfun.github.io/2018/09/15/hexo%E6%9B%B4%E6%96%B0%E6%96%87%E7%AB%A0/"/>
    <id>https://gwokfun.github.io/2018/09/15/hexo更新文章/</id>
    <published>2018-09-15T02:51:21.000Z</published>
    <updated>2018-09-15T02:51:46.196Z</updated>
    
    <content type="html"><![CDATA[<h2 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h2><p>在MyBlog目录下执行：hexo new “文章标题”，会在source-&gt;_posts文件夹内生成一个.md文件。<br>编辑该文件（遵循Markdown规则）<br>修改起始字段</p><ul><li>title 文章的标题</li><li>date 创建日期 （文件的创建日期 ）</li><li>updated 修改日期 （ 文件的修改日期）</li><li>comments 是否开启评论 true</li><li>tags 标签</li><li>categories 分类</li><li>permalink url中的名字（文件名）</li><li>编写正文内容（MakeDown）</li></ul><h2 id="更新文章"><a href="#更新文章" class="headerlink" title="更新文章"></a>更新文章</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean 删除本地静态文件（Public目录），可不执行。</span><br><span class="line">hexo g 生成本地静态文件（Public目录）</span><br><span class="line">hexo deploy 将本地静态文件推送至github（hexo d）</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;新建文章&quot;&gt;&lt;a href=&quot;#新建文章&quot; class=&quot;headerlink&quot; title=&quot;新建文章&quot;&gt;&lt;/a&gt;新建文章&lt;/h2&gt;&lt;p&gt;在MyBlog目录下执行：hexo new “文章标题”，会在source-&amp;gt;_posts文件夹内生成一个.md文件。
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Linux服务器入侵排查</title>
    <link href="https://gwokfun.github.io/2018/08/16/Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%85%A5%E4%BE%B5%E6%8E%92%E6%9F%A5/"/>
    <id>https://gwokfun.github.io/2018/08/16/Linux服务器入侵排查/</id>
    <published>2018-08-16T07:39:03.000Z</published>
    <updated>2018-09-15T03:34:30.081Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、针对情况"><a href="#一、针对情况" class="headerlink" title="一、针对情况"></a>一、针对情况</h2><ul><li>服务器上存在可疑进程，系统资源占用高（挖矿程序等）；</li><li>发现服务器对外大量发包（DDOS肉鸡）；</li><li>不正常的端口连接（反向shell等）；</li><li>服务器日志被恶意删除；</li><li>…</li></ul><h2 id="二、注意事项"><a href="#二、注意事项" class="headerlink" title="二、注意事项"></a>二、注意事项</h2><ul><li>对文件进行操作先备份文件再操作</li><li>不要vim等编辑器打开文件，会修改文件时间戳</li><li>拷贝源文件到服务器外需要附上md5校验</li><li>根据排查流程简单生成报告，svn提交</li></ul><h2 id="三、排查思路"><a href="#三、排查思路" class="headerlink" title="三、排查思路"></a>三、排查思路</h2><ol><li><p>文件分析<br> a) 文件日期、新增文件、可疑/异常文件、最近使用文件、浏览器下载文件<br> ​b) Webshell 排查与分析<br> ​c) 核心应用关联目录文件分析</p></li><li><p>进程分析<br> ​a) 当前活动进程 &amp; 远程连接<br> ​b) 启动进程&amp;计划任务<br> ​c) 进程工具分析<br> ​ i. Windows:Pchunter<br> ​ ii. Linux: Chkrootkit&amp;Rkhunter</p></li><li><p>系统信息<br> ​a) 环境变量<br> ​b) 帐号信息<br> ​c) History<br> ​d) 系统配置文件</p></li><li><p>日志分析<br> ​a) 操作系统日志<br> ​ i. Windows: 事件查看器（eventvwr）<br> ​ ii. Linux: /var/log/<br> ​b) 应用日志分析<br> ​ i. Access.log<br> ​ ii. Error.log</p></li></ol><h2 id="四、分析排查"><a href="#四、分析排查" class="headerlink" title="四、分析排查"></a>四、分析排查</h2><h3 id="文件分析"><a href="#文件分析" class="headerlink" title="文件分析"></a>文件分析</h3><p>1.敏感目录的文件分析</p><p>1）临时文件目录<br>如：/tmp/、/var/tmp<br>木马或者异常文件可能隐藏在临时目录<br>2）命令目录<br>如：/usr/bin/、/usr/sbin/等，根据echo $PATH中的命令目录进行确定排查目录<br>常见手段为替换或修改这些目录的命令，隐藏恶意代码等。</p><p>针对可疑文件可以使用stat进行创建修改时间、访问时间的详细查看，若修改时间距离事件日期接近，有线性关联，说明可能被篡改或者其他。</p><p>​例如:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#​查看tmp目录下的文件</span><br><span class="line">ls –alt /tmp/</span><br><span class="line">#​查看文件修改、创建、访问时间</span><br><span class="line">stat file</span><br></pre></td></tr></table></figure></p><p>2.特殊权限的文件<br>特殊权限主要为777权限以及s位权限的文件，存在被篡改或替换的风险，也是后门木马程序的特征之一，需要留意。<br>分析方法，通过stat对可疑文件进行检查，修改时间是否为入侵阶段；file判断文件类型。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#查找777的权限的文件 </span><br><span class="line">find / -type f -perm 4777</span><br><span class="line">#查找s位权限的文件 </span><br><span class="line">find / -type f -user root -group root \( -perm -04000 -o -perm -02000 \) -exec ls &#123;&#125; \;</span><br></pre></td></tr></table></figure><h3 id="进程分析"><a href="#进程分析" class="headerlink" title="进程分析"></a>进程分析</h3><p>1.网络进程<br>使用netstat 网络连接命令，分析可疑端口、可疑IP、可疑PID及程序进程<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">netstat -antlp | grep ESTABLISHED   查看已经建立的网络连接</span><br><span class="line">netstat -antlp | grep LISTEN    检查可以监听端口</span><br><span class="line">ip link | grep PROMISC　　正常网卡不应该存在promisc，如果存在可能有sniffer</span><br><span class="line">lsof -i 列出所有的网络连接</span><br><span class="line">arp -a　　查看arp记录是否正常</span><br><span class="line">ifconfig -a　　查看网卡设置</span><br></pre></td></tr></table></figure></p><p>2.获取进程<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ps -aux　　查看进程</span><br><span class="line">top        查看进程</span><br><span class="line">lsof -p pid　　查看进程所打开的端口及文件</span><br><span class="line">lsof -c 进程名　　查看关联文件</span><br><span class="line">file  查看文件类型</span><br><span class="line">strings 查看二进制文件内容可读字符</span><br><span class="line">ps -aux | grep -v &quot;\[&quot;   查看非系统进程</span><br></pre></td></tr></table></figure></p><p>3.隐藏进程<br>简单对比ps -ef 与/proc的进程，后续使用rootkit进行检查较为可靠。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | awk &apos;&#123;print $2&#125;&apos; | sort -n | uniq &gt;1</span><br><span class="line">ls /proc | sort -n |uniq &gt;2</span><br><span class="line">diff 1 2</span><br></pre></td></tr></table></figure><p>4.后门排查<br>除以上文件、进程、系统 分析外，推荐工具：</p><p>​ chkrootkit rkhunter</p><p>rkhunter<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y rkhunter</span><br><span class="line">rkhunter --checkall </span><br><span class="line">#检查过程中需要回车确认，最后日志生成在/var/log/rkhunter，需重点关注日志中的warning等项目。</span><br></pre></td></tr></table></figure></p><p>5.web服务检查<br>若无web服务，跳过此步。<br>一般如果网络边界做好控制，通常对外开放的仅是Web服务，那么需要先找到Webshell，可以通过如下途径：</p><p>1）检查web根目录<br>i.查看nginx或apache2的配置文件，获取root目录<br>ii.检查该目录下文件，以及浏览器访问情况<br>iii.分析可疑文件（关注jsp、php、asp、aspx等文件），是否存在webshell等后门<br>2)webshell查杀工具<br>使用河马shell<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/</span><br><span class="line">wget -O hm-linux.tgz http://down.shellpub.com/hm/latest/hm-linux-amd64.tgz?version=1.4.2</span><br><span class="line">tar xvf hm-linux.tgz</span><br><span class="line">./hm scan 你的web目录</span><br><span class="line">扫描完成之后结果会保存为result.csv文件，使用记事本或者excel打开查看</span><br><span class="line">``` </span><br><span class="line"> </span><br><span class="line">2）与测试环境目录做对比</span><br><span class="line">```  </span><br><span class="line">diff -r &#123;生产dir&#125; &#123;测试dir&#125;</span><br></pre></td></tr></table></figure></p><p>3）通过Access Log获取一些信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#伴随一些其他攻击特征</span><br><span class="line">egrep &apos;(select|script|acunetix|sqlmap)&apos; /var/log/httpd/access_log</span><br><span class="line">#页面访问排名前十的IP</span><br><span class="line">cat access.log | cut -f1 -d &quot; &quot; | sort | uniq -c | sort -k 1 -r | head -10</span><br><span class="line">#页面访问排名前十的URL</span><br><span class="line">cat access.log | cut -f4 -d &quot; &quot; | sort | uniq -c | sort -k 1 -r | head -10</span><br><span class="line">#查看最耗时的页面</span><br><span class="line">cat access.log | sort -k 2 -n -r | head 10</span><br><span class="line">#访问频次</span><br><span class="line">awk &apos;&#123;print $1&#125;&apos; /var/log/nginx/access.log |sort -n |uniq -c |sort </span><br><span class="line">awk &apos;&#123;print $1&#125;&apos; /var/log/apache2/access.log |sort -n |uniq -c |sort</span><br></pre></td></tr></table></figure><h3 id="系统信息"><a href="#系统信息" class="headerlink" title="系统信息"></a>系统信息</h3><p>1.查看分析history，注意history是否篡改或删除<br>a) wget 远程某主机（域名&amp;IP）的远控文件；<br>b) 尝试连接内网某主机（ssh scp），便于分析攻击者意图;<br>c) 打包某敏感数据或代码，tar zip 类命令<br>d) 对系统进行配置，包括命令修改、远控木马类，可找到攻击者关联信息…</p><p>2.查看分析用户相关分析<br>​a) useradd userdel 的命令时间变化（stat），以及是否包含可疑信息<br>b) cat /etc/passwd 分析可疑帐号，可登录帐号<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">awk -F: &apos;&#123;if($3==0)print $1&#125;&apos; /etc/passwd  查看UID为0的帐号</span><br><span class="line">cat /etc/passwd | grep -E &quot;/bin/bash$&quot; 查看能够登录的帐号</span><br><span class="line">ls -l /etc/passwd　　查看passwd最后修改时间</span><br><span class="line">awk -F: &apos;length($2)==0 &#123;print $1&#125;&apos; /etc/shadow　　查看是否存在空口令用户</span><br></pre></td></tr></table></figure></p><p>3.查看分析任务计划</p><p>a) 通过crontabl –l 查看当前的任务计划有哪些，是否有后门木马程序启动相关信息；<br>b) 查看etc目录任务计划相关文件，ls /etc/cron*</p><p>4.查看linux 开机启动程序</p><p>a) 查看rc.local文件（/etc/init.d/rc.local /etc/rc.local）<br>b) ls –alt /etc/init.d/<br>c) chkconfig –list(需要安装，apt-get install -y chkconfig)</p><p>5.查看系统用户登录信息</p><p>a) 使用lastlog命令，系统中所有用户最近一次登录信息。</p><p>b) 使用lastb命令，用于显示用户错误的登录列表</p><p>c) 使用last命令，用于显示用户最近登录信息（数据源为/var/log/wtmp，var/log/btmp）<br>    utmp文件中保存的是当前正在本系统中的用户的信息。<br>   wtmp文件中保存的是登录过本系统的用户的信息。</p><p>​ /var/log/wtmp 文件结构和/var/run/utmp 文件结构一样，都是引用/usr/include/bits/utmp.h 中的struct utmp</p><p>6.系统环境分析<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">env  打印环境变量</span><br><span class="line">echo $PATH 分析系统路径有无敏感可疑信息</span><br><span class="line">cat /etc/profile /etc/bash.bashrc 分析这些文件中环境变量</span><br></pre></td></tr></table></figure></p><p>7.ssh服务分析</p><p>a) 比对ssh的版本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -V</span><br></pre></td></tr></table></figure></p><p>b) 查看ssh配置文件和/usr/sbin/sshd的时间<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stat /usr/sbin/sshd</span><br></pre></td></tr></table></figure></p><p>c) 查看ssh相关目录有无可疑的公钥存在。<br>ls -l /root/.ssh/ /etc/ssh/</p><h3 id="日志分析"><a href="#日志分析" class="headerlink" title="日志分析"></a>日志分析</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">日志文件</span><br><span class="line">/var/log/message       包括整体系统信息</span><br><span class="line">/var/log/auth.log        包含系统授权信息，包括用户登录和使用的权限机制等</span><br><span class="line">/var/log/userlog         记录所有等级用户信息的日志。</span><br><span class="line">/var/log/cron           记录crontab命令是否被正确的执行</span><br><span class="line">/var/log/xferlog(vsftpd.log)记录Linux FTP日志</span><br><span class="line">/var/log/lastlog         记录登录的用户，可以使用命令lastlog查看</span><br><span class="line">/var/log/secure         记录大多数应用输入的账号与密码，登录成功与否</span><br><span class="line">var/log/wtmp　　      记录登录系统成功的账户信息，等同于命令last</span><br><span class="line">var/log/faillog　　      记录登录系统不成功的账号信息，一般会被黑客删除</span><br></pre></td></tr></table></figure><p>登录日志可以关注Accepted、Failed password 、invalid特殊关键字<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">定位有多少IP在爆破主机的root帐号</span><br><span class="line">grep &quot;Failed password for root&quot; /var/log/auth.log | awk &apos;&#123;print $11&#125;&apos; | sort | uniq -c | sort -nr | more</span><br><span class="line">登录成功的IP有哪些</span><br><span class="line">grep &quot;Accepted &quot; /var/log/auth.log | awk &apos;&#123;print $11&#125;&apos; | sort | uniq -c | sort -nr | more  </span><br><span class="line">tail -400f demo.log #监控最后400行日志文件的变化 等价与 tail -n 400 -f （-f参数是实时）  </span><br><span class="line">less demo.log #查看日志文件，支持上下滚屏，查找功能  </span><br><span class="line">uniq -c demo.log  #标记该行重复的数量，不重复值为1 </span><br><span class="line">grep -c &apos;ERROR&apos; demo.log   #输出文件demo.log中查找所有包行ERROR的行的数量</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、针对情况&quot;&gt;&lt;a href=&quot;#一、针对情况&quot; class=&quot;headerlink&quot; title=&quot;一、针对情况&quot;&gt;&lt;/a&gt;一、针对情况&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;服务器上存在可疑进程，系统资源占用高（挖矿程序等）；&lt;/li&gt;
&lt;li&gt;发现服务器对外大量发包（
      
    
    </summary>
    
      <category term="安全排查" scheme="https://gwokfun.github.io/categories/%E5%AE%89%E5%85%A8%E6%8E%92%E6%9F%A5/"/>
    
    
      <category term="Linux,安全" scheme="https://gwokfun.github.io/tags/Linux-%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
</feed>
